#BlueJ class context
comment0.params=_mg
comment0.target=MillionaireGameGUI(MillionaireGame)
comment0.text=\ \r\n\ Createa\ a\ MillionaireGameGUI\ object\ and\ arranges\ the\ GUI\ widgets.\r\n\r\n\ @param\ _mg\ a\ MillionaireGame\ object\r\n
comment1.params=
comment1.target=javax.swing.JComponent\ initLogoArea()
comment1.text=\r\n\ Puts\ the\ who\ wants\ to\ be\ a\ millionaire\ image\ on\ a\ JPanel\ and\ returns\ the\ panel\ to\ the\ constructor.\r\n\ \r\n\ @return\ a\ JPanel\ with\ the\ millionaire\ image\ on\ it.\r\n
comment10.params=we
comment10.target=void\ windowClosed(java.awt.event.WindowEvent)
comment11.params=we
comment11.target=void\ windowActivated(java.awt.event.WindowEvent)
comment12.params=we
comment12.target=void\ windowOpened(java.awt.event.WindowEvent)
comment13.params=we
comment13.target=void\ windowDeactivated(java.awt.event.WindowEvent)
comment14.params=we
comment14.target=void\ windowDeiconified(java.awt.event.WindowEvent)
comment15.params=we
comment15.target=void\ windowIconified(java.awt.event.WindowEvent)
comment2.params=
comment2.target=javax.swing.JComponent\ initAnswerPane()
comment2.text=\r\n\ Create\ a\ panel\ that\ contains\ the\ question,\ answer,\ and\ money\ won\ widgets.\r\n\r\n\ @return\ a\ JPanel\ with\ the\ question/answer\ area.\ \ \ \ \ \ \ \ \ \ \r\n
comment3.params=
comment3.target=javax.swing.JComponent\ initBottomPane()
comment3.text=\r\n\ Create\ a\ panel\ that\ contains\ the\ "quit",\ "next\ question",\ and\ "jump\ question"\ buttons.\r\n\r\n\ @return\ a\ JPanel\ with\ the\ "quit",\ "next\ question",\ and\ "jump\ question"\ buttons.\r\n
comment4.params=
comment4.target=void\ initLblAnswers()
comment4.text=\r\n\ Creates\ the\ labels\ used\ to\ display\ the\ answers.\r\n
comment5.params=
comment5.target=void\ initBtnAnswers()
comment5.text=\r\n\ Creates\ the\ buttons\ used\ for\ answering\ questions.\ \ \ \ \ \r\n
comment6.params=answers
comment6.target=void\ setLblAnswers(java.lang.String[])
comment6.text=\r\n\ Changes\ the\ text\ of\ the\ answer\ labels.\r\n\r\n\ @param\ answers\ An\ array\ of\ strings\ that\ contains\ possible\ answers.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ answers[0]\ \=\ answer\ A,\ answers[1]\ \=\ answer\ B,\ etc.\r\n
comment7.params=enable
comment7.target=void\ enableBtnAnswer(boolean)
comment7.text=\r\n\ Enables\ or\ disables\ all\ of\ the\ answer\ buttons.\r\n\r\n\ @param\ enable\ -\ The\ answer\ buttons\ are\ enabled\ if\ "enable"\ is\ true.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ They\ are\ disabled\ if\ "enable"\ is\ false.\r\n
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment8.text=\r\n\ Called\ when\ a\ button\ is\ clicked.\r\n\ \ \ \ \ \r\n\ @param\ e\ The\ source\ of\ the\ button\ click.\r\n
comment9.params=we
comment9.target=void\ windowClosing(java.awt.event.WindowEvent)
comment9.text=\r\n\ Exits\ the\ program\ when\ the\ window\ is\ closed.\r\n\r\n\ @param\ we\ -\ The\ event\ triggered\ by\ the\ window\ closing.\r\n
numComments=16
